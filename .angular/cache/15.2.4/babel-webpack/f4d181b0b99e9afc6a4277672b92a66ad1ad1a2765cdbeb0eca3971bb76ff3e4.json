{"ast":null,"code":"import _defineProperty from \"C:/Users/OSCAR/Angular/store/store/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ShoppingCartService {\n  constructor() {\n    _defineProperty(this, \"products\", []);\n    _defineProperty(this, \"cartSubject\", new BehaviorSubject([]));\n    _defineProperty(this, \"totalSubject\", new BehaviorSubject(0));\n    _defineProperty(this, \"quantitySubject\", new BehaviorSubject(0));\n  }\n  get totalAction$() {\n    return this.totalSubject.asObservable();\n  }\n  get quantityAction$() {\n    return this.quantitySubject.asObservable();\n  }\n  get cartAction$() {\n    return this.cartSubject.asObservable();\n  }\n  updateCart(product) {\n    this.addToCart(product);\n    this.quantityProducts();\n    this.calcTotal();\n  }\n  resetCart() {\n    this.cartSubject.next([]);\n    this.totalSubject.next(0);\n    this.quantitySubject.next(0);\n    this.products = [];\n  }\n  addToCart(product) {\n    const isProductInCart = this.products.find(({\n      id\n    }) => id === product.id);\n    if (isProductInCart) {\n      isProductInCart.qty += 1;\n    } else {\n      this.products.push({\n        ...product,\n        qty: 1\n      });\n    }\n    this.cartSubject.next(this.products);\n  }\n  quantityProducts() {\n    const quantity = this.products.reduce((acc, prod) => acc += prod.qty, 0);\n    this.quantitySubject.next(quantity);\n  }\n  calcTotal() {\n    const total = this.products.reduce((acc, prod) => acc += prod.price * prod.qty, 0);\n    this.totalSubject.next(total);\n  }\n}\n_defineProperty(ShoppingCartService, \"\\u0275fac\", function ShoppingCartService_Factory(t) {\n  return new (t || ShoppingCartService)();\n});\n_defineProperty(ShoppingCartService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ShoppingCartService,\n  factory: ShoppingCartService.ɵfac,\n  providedIn: 'root'\n}));","map":{"version":3,"mappings":";AACA,SAAqBA,eAAe,QAAQ,MAAM;;AAKlD,OAAM,MAAOC,mBAAmB;EAAA;IAAA,kCACR,EAAE;IAAA,qCAEF,IAAID,eAAe,CAAY,EAAE,CAAC;IAAA,sCACjC,IAAIA,eAAe,CAAS,CAAC,CAAC;IAAA,yCAC3B,IAAIA,eAAe,CAAS,CAAC,CAAC;EAAA;EAGxD,IAAIE,YAAY;IACd,OAAO,IAAI,CAACC,YAAY,CAACC,YAAY,EAAE;EACzC;EACA,IAAIC,eAAe;IACjB,OAAO,IAAI,CAACC,eAAe,CAACF,YAAY,EAAE;EAC5C;EACA,IAAIG,WAAW;IACb,OAAO,IAAI,CAACC,WAAW,CAACJ,YAAY,EAAE;EACxC;EAGAK,UAAU,CAACC,OAAgB;IACzB,IAAI,CAACC,SAAS,CAACD,OAAO,CAAC;IACvB,IAAI,CAACE,gBAAgB,EAAE;IACvB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,SAAS;IACP,IAAI,CAACN,WAAW,CAACO,IAAI,CAAC,EAAE,CAAC;IACzB,IAAI,CAACZ,YAAY,CAACY,IAAI,CAAC,CAAC,CAAC;IACzB,IAAI,CAACT,eAAe,CAACS,IAAI,CAAC,CAAC,CAAC;IAC5B,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAEQL,SAAS,CAACD,OAAgB;IAChC,MAAMO,eAAe,GAAG,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC;MAAEC;IAAE,CAAE,KAAKA,EAAE,KAAKT,OAAO,CAACS,EAAE,CAAC;IAEzE,IAAIF,eAAe,EAAE;MACnBA,eAAe,CAACG,GAAG,IAAI,CAAC;KACzB,MAAM;MACL,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC;QAAE,GAAGX,OAAO;QAAEU,GAAG,EAAE;MAAC,CAAE,CAAC;;IAG5C,IAAI,CAACZ,WAAW,CAACO,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;EACtC;EAEQJ,gBAAgB;IACtB,MAAMU,QAAQ,GAAG,IAAI,CAACN,QAAQ,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,IAAIC,IAAI,CAACL,GAAG,EAAE,CAAC,CAAC;IACxE,IAAI,CAACd,eAAe,CAACS,IAAI,CAACO,QAAQ,CAAC;EACrC;EAEQT,SAAS;IACf,MAAMa,KAAK,GAAG,IAAI,CAACV,QAAQ,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,IAAKC,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACL,GAAI,EAAE,CAAC,CAAC;IACpF,IAAI,CAACjB,YAAY,CAACY,IAAI,CAACW,KAAK,CAAC;EAC/B;;gBApDWzB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAA,gBAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAA2B,SAAnB3B,mBAAmB;EAAA4B,YAFlB;AAAM","names":["BehaviorSubject","ShoppingCartService","totalAction$","totalSubject","asObservable","quantityAction$","quantitySubject","cartAction$","cartSubject","updateCart","product","addToCart","quantityProducts","calcTotal","resetCart","next","products","isProductInCart","find","id","qty","push","quantity","reduce","acc","prod","total","price","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\OSCAR\\Angular\\store\\store\\src\\app\\shared\\services\\shopping-cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Product } from 'src/app/pages/products/interfaces/product.interface';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n  products: Product[] = [];\n\n  private cartSubject = new BehaviorSubject<Product[]>([]);\n  private totalSubject = new BehaviorSubject<number>(0);\n  private quantitySubject = new BehaviorSubject<number>(0);\n\n\n  get totalAction$(): Observable<number> {\n    return this.totalSubject.asObservable();\n  }\n  get quantityAction$(): Observable<number> {\n    return this.quantitySubject.asObservable();\n  }\n  get cartAction$(): Observable<Product[]> {\n    return this.cartSubject.asObservable();\n  }\n\n\n  updateCart(product: Product): void {\n    this.addToCart(product);\n    this.quantityProducts();\n    this.calcTotal();\n  }\n\n  resetCart(): void {\n    this.cartSubject.next([]);\n    this.totalSubject.next(0);\n    this.quantitySubject.next(0);\n    this.products = [];\n  }\n\n  private addToCart(product: Product): void {\n    const isProductInCart = this.products.find(({ id }) => id === product.id)\n\n    if (isProductInCart) {\n      isProductInCart.qty += 1;\n    } else {\n      this.products.push({ ...product, qty: 1 })\n    }\n\n    this.cartSubject.next(this.products);\n  }\n\n  private quantityProducts(): void {\n    const quantity = this.products.reduce((acc, prod) => acc += prod.qty, 0);\n    this.quantitySubject.next(quantity);\n  }\n\n  private calcTotal(): void {\n    const total = this.products.reduce((acc, prod) => acc += (prod.price * prod.qty), 0);\n    this.totalSubject.next(total);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}